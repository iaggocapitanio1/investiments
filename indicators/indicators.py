import yfinance as yf



def ebitda(ticker: str) -> float:
    """
    Calculate the EBITDA (Earnings Before Interest, Taxes, Depreciation, and Amortization)
    for a given company based on its ticker symbol.

    EBITDA is a financial metric used to evaluate a company's operating performance by focusing
    on its core business operations, excluding the effects of financing and accounting decisions
    such as interest, taxes, depreciation, and amortization. It provides insights into the cash
    generated by a companyâ€™s operations before paying lenders or reinvesting in assets.

    Formula:
        EBITDA = Revenue - Cost of Goods Sold (COGS) - Operating Expenses
        OR
        EBITDA = Operating Income + Depreciation + Amortization

    Parameters:
    -----------
    ticker : str
        The stock ticker symbol of the company (e.g., "PETR4.SA").

    Returns:
    --------
    float
        The calculated EBITDA value for the company, or None if data is unavailable.

    Purpose:
    --------
    - EBITDA is widely used to assess profitability based on core operations alone, as it excludes
      non-operational expenses and accounting adjustments.
    - This metric is especially useful when comparing companies in the same industry, as it normalizes
      differences in capital structure and tax rates.

    Considerations:
    ---------------
    - While EBITDA provides a useful view of operational efficiency, it does not account for actual cash
      expenses related to debt (interest), taxes, or reinvestment in assets (depreciation and amortization).
    - EBITDA should not be the sole metric used for financial evaluation, as it overlooks important
      obligations and capital requirements.

    Example Usage:
    --------------
    >>> ticker = "PETR4.SA"
    >>> ebitda = get_ebitda(ticker)
    >>> print(f"EBITDA for {ticker}: {ebitda}")
    """

    stock = yf.Ticker(ticker)
    financials = stock.financials

    try:
        revenue = financials.loc['Total Revenue'].iloc[0] if 'Total Revenue' in financials.index else None
        cogs = financials.loc['Cost of Revenue'].iloc[0] if 'Cost of Revenue' in financials.index else 0
        operating_expenses = financials.loc['Operating Expenses'].iloc[
            0] if 'Operating Expenses' in financials.index else 0

        if revenue is not None:
            ebitda = revenue - cogs - operating_expenses
            return ebitda
        else:
            print("Revenue data is not available.")
            return None

    except KeyError as e:
        print(f"Error retrieving data: {e}")
        return None


